import pytest
from dptb.nn.build import build_model
from dptb.postprocess.bandstructure.band import Band
import os
from pathlib import Path
import numpy as np

rootdir = os.path.join(Path(os.path.abspath(__file__)).parent, "data")

class TestV1Jsonuniform:
    run_opt = {
            "init_model": f"{rootdir}/json_model/AlAs_v1_nnsk_b5.200_c4.200_w0.200.json",
            "restart": None,
            "freeze": False,
            "train_soc": False,
            "log_path": None,
            "log_level": None
        }

    model_option = {
        "nnsk": {
            "onsite": {"method": "uniform"},
            "hopping": {"method": "powerlaw", "rs":4.2, "w": 0.2},
            "soc":{},
            "push": False,
            "freeze": False
        }
    }
    common_options = {
    "basis": {
        "As": ["4s","4p","d*"],
        "Al": ["3s","3p","d*"]
    },
    "device": "cpu",
    "dtype": "float32",
    "overlap": False
    }

    jdata={   
    "task_options": {
        "task": "band",
        "kline_type":"abacus",
        "kpath":[[0.0000000000,   0.0000000000,   0.0000000000,   2],   
                 [0.5000000000,   0.0000000000,   0.5000000000,   2],               
                 [0.6250000000,   0.2500000000,   0.6250000000,   1],    
                 [0.3750000000,   0.3750000000,   0.7500000000,   2],     
                 [0.0000000000,   0.0000000000,   0.0000000000,   2],    
                 [0.5000000000,   0.5000000000,   0.5000000000,   2],                
                 [0.5000000000,   0.2500000000,   0.7500000000,   2],               
                 [0.5000000000,   0.0000000000,   0.5000000000,   1 ]
                 ],
        "klabels":['G','X','U','K','G','L','W','X'],
        "E_fermi":-9.307,
        "emin":-15,
        "emax":10    }
    }
       

    def test_bands(self):
        model = build_model(self.run_opt["init_model"], self.model_option, self.common_options)
 
        kpath_kwargs = self.jdata["task_options"]
        bcal = Band(model=model, 
            use_gui=True, 
            results_path=f'{rootdir}/out', 
            device=model.device)

        stru_data = f"{rootdir}/json_model/AlAs.vasp"
        eigenstatus = bcal.get_bands(data=stru_data, 
               kpath_kwargs=kpath_kwargs)
        
        expected_bands =np.array([[-2.48727150e+01, -1.29382324e+01, -1.29382257e+01, -1.29382229e+01, -1.10868120e+01, -8.07862854e+00, -8.07862568e+00, -8.07861805e+00,  9.56408596e+00,  9.56408691e+00,  1.25271873e+01,  1.25271950e+01,  1.25271978e+01,  4.23655891e+01,  4.23656044e+01,  4.32170753e+01,  4.32170792e+01,  4.32170868e+01],
             [-2.41187267e+01, -1.61148472e+01, -1.42793083e+01, -1.42793045e+01, -1.03604565e+01, -8.68612957e+00, -5.90628624e+00, -5.90628576e+00,  2.25617599e+00,  5.51729870e+00,  5.51730347e+00,  5.61441135e+00,  5.90860081e+00,  2.50449829e+01,  2.82622643e+01,  2.82622776e+01,  2.84239502e+01,  3.07470131e+01],
             [-2.29336300e+01, -1.85238571e+01, -1.51972685e+01, -1.51972666e+01, -1.13513584e+01, -1.05228834e+01, -2.21334386e+00, -2.21334243e+00, -3.03742558e-01, -3.03741843e-01, -9.65526607e-03,  8.24528575e-01,  1.84810734e+00,  7.89270067e+00,  1.01749058e+01,  1.01749077e+01,  1.34912348e+01,  1.40874834e+01],
             [-2.29474239e+01, -1.84172096e+01, -1.56978197e+01, -1.50829716e+01, -1.10063257e+01, -9.69069576e+00, -2.91590619e+00, -2.64113235e+00, -1.43450952e+00, -4.38025206e-01,  1.01333761e+00,  1.07858098e+00,  3.61593747e+00,  7.17037296e+00,  9.29849529e+00,  1.00337200e+01,  1.38197346e+01,  1.42732258e+01],
             [-2.30109138e+01, -1.81435585e+01, -1.63736401e+01, -1.47889500e+01, -1.06536665e+01, -7.59100485e+00, -4.40897274e+00, -4.01978016e+00, -1.59141457e+00, -8.14805627e-02,  1.07713044e+00,  2.36757493e+00,  6.39950705e+00,  6.44096851e+00,  8.05662537e+00,  1.10570469e+01,  1.42302742e+01,  1.53123789e+01],
             [-2.30108986e+01, -1.81435699e+01, -1.63736362e+01, -1.47889528e+01, -1.06536646e+01, -7.59101057e+00, -4.40896845e+00, -4.01978016e+00, -1.59141552e+00, -8.14811662e-02,  1.07712996e+00,  2.36757469e+00,  6.39950800e+00,  6.44096851e+00,  8.05662632e+00,  1.10570469e+01,  1.42302704e+01,  1.53123856e+01],
             [-2.40611782e+01, -1.67647114e+01, -1.50329933e+01, -1.34557276e+01, -9.01750469e+00, -7.44570971e+00, -7.16721439e+00, -6.34023905e+00,  2.99699736e+00,  3.46649384e+00,  4.46376228e+00,  5.20905399e+00,  7.82006931e+00,  2.53436356e+01,  2.59452019e+01,  2.75783978e+01,  2.84669800e+01,  2.92158451e+01],
             [-2.48727150e+01, -1.29382324e+01, -1.29382257e+01, -1.29382229e+01, -1.10868120e+01, -8.07862854e+00, -8.07862568e+00, -8.07861805e+00,  9.56408596e+00,  9.56408691e+00,  1.25271873e+01,  1.25271950e+01,  1.25271978e+01,  4.23655891e+01,  4.23656044e+01,  4.32170753e+01,  4.32170792e+01,  4.32170868e+01],
             [-2.43790150e+01, -1.64551792e+01, -1.34435387e+01, -1.34435349e+01, -1.03514795e+01, -7.39460945e+00, -7.39460516e+00, -6.10483932e+00,  4.67000580e+00,  4.67000914e+00,  6.74771929e+00,  6.74772310e+00,  9.39733410e+00,  3.10563354e+01,  3.10563450e+01,  3.17371826e+01,  3.17371864e+01,  3.35946846e+01],
             [-2.35396881e+01, -1.85059109e+01, -1.37993116e+01, -1.37993116e+01, -1.08380241e+01, -7.56033421e+00, -7.56033087e+00, -3.32421374e+00, -4.98459250e-01, -4.98458147e-01,  4.68962049e+00,  4.68962288e+00,  7.64235640e+00,  1.68248940e+01,  1.68248997e+01,  2.04327011e+01,  2.04327030e+01,  2.12005653e+01],
             [-2.31961079e+01, -1.82634125e+01, -1.56346197e+01, -1.44923830e+01, -9.23417282e+00, -7.92826271e+00, -5.95008469e+00, -4.99026012e+00, -1.32351279e+00, -5.01590669e-01,  2.95195317e+00,  4.62497950e+00,  5.44099808e+00,  1.17575951e+01,  1.19310246e+01,  1.50337820e+01,  1.79441051e+01,  1.80985184e+01],
             [-2.29424934e+01, -1.80575047e+01, -1.62370167e+01, -1.56745434e+01, -8.23033428e+00, -7.16741085e+00, -6.62496185e+00, -5.73856449e+00, -1.48688376e+00,  1.80971527e+00,  2.45554900e+00,  3.85232139e+00,  4.23087120e+00,  5.92445564e+00,  6.44421244e+00,  8.21325207e+00,  1.44543571e+01,  1.44987440e+01],
             [-2.29404392e+01, -1.83383312e+01, -1.57138681e+01, -1.54623451e+01, -1.01436739e+01, -9.37874889e+00, -4.06893778e+00, -3.25271797e+00, -1.23538244e+00, -4.17988628e-01,  1.19791162e+00,  2.69611549e+00,  3.94141436e+00,  6.43033361e+00,  8.37113857e+00,  9.67157173e+00,  1.41308174e+01,  1.42368813e+01],
             [-2.29336300e+01, -1.85238571e+01, -1.51972685e+01, -1.51972666e+01, -1.13513584e+01, -1.05228834e+01, -2.21334386e+00, -2.21334243e+00, -3.03742558e-01, -3.03741843e-01, -9.65526607e-03,  8.24528575e-01,  1.84810734e+00,  7.89270067e+00,  1.01749058e+01,  1.01749077e+01,  1.34912348e+01,  1.40874834e+01]])

        assert np.allclose(eigenstatus["eigenvalues"], expected_bands, atol=1e-4)



class TestV1Jsonstrain:
    run_opt = {
            "init_model": f"{rootdir}/json_model/Si_v1_nnsk_b2.600_c2.600_w0.300.json",
            "restart": None,
            "freeze": False,
            "train_soc": False,
            "log_path": None,
            "log_level": None
        }

    model_option = {
        "nnsk": {
        "onsite": {"method": "strain","rs":6, "w": 0.1},
        "hopping": {"method": "powerlaw", "rs":2.6, "w": 0.3},
        "soc":{},
        "push": False,
        "freeze": False
        }
    }
    common_options = {
    "basis": {
    "Si": ["3s","3p","d*"]
    },
    "device": "cpu",
    "dtype": "float32",
    "overlap": False
    }

    jdata={   
    "task_options": {
        "task": "band",
        "kline_type":"abacus",
        "kpath":[[0.0000000000,  0.0000000000,   0.0000000000,   2],   
                [0.5000000000,   0.0000000000,   0.5000000000,   2],               
                [0.6250000000,   0.2500000000,   0.6250000000,   1],    
                [0.3750000000,   0.3750000000,   0.7500000000,   2],     
                [0.0000000000,   0.0000000000,   0.0000000000,   2],    
                [0.5000000000,   0.5000000000,   0.5000000000,   2],                
                [0.5000000000,   0.2500000000,   0.7500000000,   2],               
                [0.5000000000,   0.0000000000,   0.5000000000,   1 ]
                ],
        "klabels":["G","X","X/U","K","G","L","W","X"],
        "E_fermi":-9.307,
        "emin":-15,
        "emax":10    }
    }
       

    def test_bands(self):
        model = build_model(self.run_opt["init_model"], self.model_option, self.common_options)
 
        kpath_kwargs = self.jdata["task_options"]
        bcal = Band(model=model, 
            use_gui=True, 
            results_path=f'{rootdir}/out', 
            device=model.device)

        stru_data = f"{rootdir}/json_model/silicon.vasp"

        eigenstatus = bcal.get_bands(data=stru_data, 
               kpath_kwargs=kpath_kwargs)
        expected_bands = np.array([[-28.032394  , -12.518021  ,  -8.789028  ,  -8.789027  ,
                                     -8.78902   ,  -6.074078  ,  -6.074069  ,  -6.0740604 ,
                                     17.192019  ,  17.192028  ,  22.030336  ,  22.030338  ,
                                     22.03035   ,  23.343376  ,  23.343376  ,  23.343384  ,
                                     28.18668   ,  28.186697  ],
                                   [-26.710665  , -17.258825  , -11.786415  , -11.786402  ,
                                     -6.316819  ,  -6.08972   ,  -2.2474113 ,  -2.2474105 ,
                                     15.599638  ,  18.773561  ,  20.637032  ,  21.751331  ,
                                     21.751333  ,  22.788795  ,  22.788813  ,  26.043669  ,
                                     26.558607  ,  29.842487  ],
                                   [-22.908417  , -22.90841   , -13.267318  , -13.267316  ,
                                     -5.855864  ,  -5.8558598 ,   0.13847035,   0.13847637,
                                     17.0159    ,  17.0159    ,  21.383863  ,  21.383865  ,
                                     22.246996  ,  22.247007  ,  22.64281   ,  22.642822  ,
                                     29.825714  ,  29.825722  ],
                                   [-23.125595  , -22.677975  , -13.552594  , -13.126421  ,
                                     -6.040592  ,  -5.239112  ,  -0.16200367,   0.15783598,
                                     17.022974  ,  17.076164  ,  20.278925  ,  21.015097  ,
                                     21.579382  ,  22.268646  ,  23.596603  ,  24.191101  ,
                                     29.491728  ,  29.689163  ],
                                   [-23.748362  , -21.997149  , -13.956201  , -12.712631  ,
                                     -6.524768  ,  -3.9821868 ,  -0.98925126,   0.1548973 ,
                                     17.227066  ,  17.242361  ,  18.778227  ,  20.15013   ,
                                     22.017757  ,  22.306322  ,  24.653385  ,  25.92878   ,
                                     28.555614  ,  29.325285  ],
                                   [-23.748354  , -21.997162  , -13.956195  , -12.712616  ,
                                     -6.5247726 ,  -3.9821932 ,  -0.98925066,   0.15489526,
                                     17.22706   ,  17.242352  ,  18.778234  ,  20.150133  ,
                                     22.017756  ,  22.306314  ,  24.653393  ,  25.928793  ,
                                     28.555605  ,  29.325268  ],
                                   [-26.629864  , -17.600563  , -12.377507  , -10.340946  ,
                                     -8.252066  ,  -4.5056643 ,  -3.1107721 ,  -1.5953344 ,
                                     16.209995  ,  17.483477  ,  20.519865  ,  21.010235  ,
                                     22.459747  ,  22.790142  ,  24.399433  ,  24.6775    ,
                                     28.152231  ,  28.817282  ],
                                   [-28.032394  , -12.518021  ,  -8.789028  ,  -8.789027  ,
                                     -8.78902   ,  -6.074078  ,  -6.074069  ,  -6.0740604 ,
                                     17.192019  ,  17.192028  ,  22.030336  ,  22.030338  ,
                                     22.03035   ,  23.343376  ,  23.343376  ,  23.343384  ,
                                     28.18668   ,  28.186697  ],
                                   [-27.095016  , -16.587624  , -10.282119  , -10.282109  ,
                                     -9.392605  ,  -4.47474   ,  -4.4747334 ,  -2.0351746 ,
                                     16.790812  ,  16.79082   ,  21.469982  ,  21.469984  ,
                                     22.261318  ,  23.112501  ,  23.889814  ,  23.889832  ,
                                     28.476255  ,  28.476261  ],
                                   [-25.650513  , -19.811338  , -11.168917  , -11.168911  ,
                                     -9.854099  ,  -3.526547  ,  -3.5265448 ,   0.52536994,
                                     17.867775  ,  17.86778   ,  18.799477  ,  18.799482  ,
                                     22.678572  ,  22.67859   ,  25.41526   ,  25.415262  ,
                                     28.463633  ,  28.463642  ],
                                   [-24.895058  , -20.650934  , -13.44941   , -12.120061  ,
                                     -7.257396  ,  -3.5902717 ,  -2.117014  ,   0.15689819,
                                     17.095425  ,  17.784517  ,  18.656044  ,  19.36713   ,
                                     22.366032  ,  22.408947  ,  25.288326  ,  26.88247   ,
                                     27.520784  ,  28.909798  ],
                                   [-22.888115  , -22.888107  , -13.577753  , -13.577752  ,
                                     -5.001314  ,  -5.0013084 ,  -0.38720337,  -0.38719827,
                                     17.119455  ,  17.11947   ,  19.495407  ,  19.495422  ,
                                     21.823872  ,  21.823875  ,  25.932095  ,  25.9321    ,
                                     28.705719  ,  28.705719  ],
                                   [-22.898304  , -22.898302  , -13.427348  , -13.427342  ,
                                     -5.4427934 ,  -5.442793  ,  -0.10512064,  -0.10511683,
                                     17.060398  ,  17.060402  ,  20.222359  ,  20.222364  ,
                                     21.842312  ,  21.842323  ,  24.5921    ,  24.5921    ,
                                     29.378563  ,  29.378567  ],
                                   [-22.908417  , -22.90841   , -13.267318  , -13.267316  ,
                                     -5.855864  ,  -5.8558598 ,   0.13847035,   0.13847637,
                                     17.0159    ,  17.0159    ,  21.383863  ,  21.383865  ,
                                     22.246996  ,  22.247007  ,  22.64281   ,  22.642822  ,
                                     29.825714  ,  29.825722  ]])
        assert np.allclose(eigenstatus["eigenvalues"], expected_bands, atol=1e-4)